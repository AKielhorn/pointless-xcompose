# -*- coding: utf-8; mode: conf -*-
# vim: encoding=utf-8 ft=conf

# Arithmetic operators
# ====================
# 
# Lines commented out are already present in X.  Notice the “<minus>”
# X name refers to the ASCII hyphen-minus, not to the true minus
# character.

# <Multi_key> <plus> <minus>: "±" plusminus # PLUS-MINUS SIGN
<Multi_key> <equal> <minus>: "±" plusminus
<Multi_key> <minus> <equal>: "±" plusminus
<Multi_key> <minus> <plus>: "±" plusminus

# <Multi_key> <x> <x>: "×" multiply # MULTIPLICATION SIGN
<Multi_key> <minus> <period>: "−" U2212 # MINUS SIGN' (U+2212)
# <Multi_key> <colon> <minus>: "÷" division # DIVISION SIGN
# <Multi_key> <minus> <colon>: "÷" division # DIVISION SIGN

# 2215 is different from both the ASCII slash (which Unicode
# confusingly call “solidus”) and the U2044 fraction slash ⁄, which
# everyone _except_ unicode call “solidus”. Use the first as operator,
# the second for fractions.
# <slash>:                   "/" U002F # ASCII SLASH
<Multi_key> <slash> <slash>: "∕" U2215 # DIVISION SLASH
<Multi_key> <slash> <period>: "⁄" U2044 # FRACTION SLASH

# Comparison
# ==========
#
# The order here is more intuitive for programmers than the X
# versions.
#

<Multi_key> <exclam> <equal>   : "≠" U2260 # !=
<Multi_key> <tilde> <equal> : "≅" U2245 # ~=
<Multi_key> <greater> <equal>: "≥" U2265 # >=
<Multi_key> <less> <equal>: "≤" # <=
<Multi_key> <exclam> <less>    : "≮" U226E # !<
<Multi_key> <exclam> <greater> : "≯" U226F # !>


# Set operators
# =============
# TODO: What are some good mnemonics for these?
#
# <Multi_key> : "∈" U2208
# <Multi_key> : "∉" U2209
# <Multi_key> : "⊂" U2282
# <Multi_key> : "⊆" U2286
# <Multi_key> : "⊄" U2284

# Other
# =====
<Multi_key> <exclam> <minus> : "¬" notsign # NOT SIGN
<Multi_key> <bracketleft> <bracketright>: "∎" # END OF PROOF

# % ÷ 10
## Multi_key> <percent> <o>: "‰"   U2030 # PER MILLE SIGN
# % ÷ 100; can’t extend with <o> <o> due to XCompose substring issue.
<Multi_key> <percent> <O>: "‱"   U2031 # PER MYRIAD SIGN
